---
# description: enable backup for this host (client)?
# type: bool
borgbackup_required: true

# description: backup user on the client
# type: string
borgbackup_client_user: root

# description: ssh key on the backup client to connect to the backup server
# type: string
borgbackup_ssh_key: "~{{ borgbackup_client_user }}/.ssh/id_borg_rsa"

# description: borg backup version to use
# type: string
borgbackup_version: "1.1.10"
# description: checksum type and borg checksum
# type: string
borgbackup_checksum: "sha256:6338d67aad4b5cd327b25ea363e30f0ed4abc425ce2d6a597c75a67a876ef9af"
# description: borg download url
# type: string
borgbackup_download_url: "https://github.com/borgbackup/borg/releases/download/{{ borgbackup_version }}/borg-linux64"

# description: borg compression to use
# choices:
# type: string
borgbackup_compression: "auto,zlib,6"

# description: borg encryption mode to use
#              make sure you backup your client keys or switch to a different mode
#              https://borgbackup.readthedocs.io/en/stable/usage/init.html#borg-init
# type: string
borgbackup_encryption_mode: keyfile

# description: backup pre-commands to run
# type: list
borgbackup_pre_commands:
  - '[[ ! -f "/usr/sbin/automysqlbackup" ]] || /usr/sbin/automysqlbackup'

# description: backup post-commands to run
# type: list
borgbackup_post_commands: []

# description: paths to backup
# type: list
borgbackup_include:
  - "/etc"
  - "/home"
  - "/root"
  - "/var/www"
  - "/var/log"

# description: paths to exclude
# type: list
borgbackup_exclude: []

# description: backup retention configuration
# type: dict
borgbackup_retention:
  hourly: 12
  daily: 7
  weekly: 4
  monthly: 6
  yearly: 1

# description: cron day to run the backup
#              use valid cron expression
# type: string
borgbackup_cron_day: "*"

# description: cron hour to run the backup
#              use valid cron expression
# type: string

borgbackup_cron_hour: "{{ 5|random(seed=inventory_hostname) }}"

# description: cron minute to run the backup
#              use valid cron expression
# type: string
borgbackup_cron_minute: "{{ 59|random(seed=inventory_hostname) }}"

# description: use append-only mode for the client configuration?
#              https://borgbackup.readthedocs.io/en/stable/usage/notes.html#append-only-mode
# type: bool
borgbackup_appendonly: false

# description: also config append-only mode at repo level?
#              https://borgbackup.readthedocs.io/en/stable/usage/notes.html#append-only-mode
# type: bool
borgbackup_appendonly_repoconfig: false

# description: inventory hostname of a secure management server that will be used to prune backups
# type: string
borgbackup_management_station: ''

# description: user to use on the management server
# type: string
borgbackup_management_user: ''

# description: ssh public key used to connect from management station to backup server
# type: string
borgbackup_management_ssh_pubkey: ''

# description: owner of the backup script on the client
# type: string
borgbackup_owner: root

# description: group of the backup script on the client
# type: string
borgbackup_group: root

# description: shell to use for backup script
# type: string
borgbackup_shell: "/bin/bash"
